#include<bits/stdc++.h>
using namespace std;
 
struct Node{
    int data;
    Node *left, *right;
    Node(int val){
        data=val;
        left=NULL;
        right=NULL;
    }
 
};
 
Node* insertBST(Node *root, int val){
    if( root==NULL){
        return new Node(val);
    }
    if(val< root->data){
        root->left=insertBST(root->left,val);
    }
    else{
        root->right=insertBST(root->right,val);
       
    }
 
 
    return root;
}
void inord(Node *root){
    if (root==NULL){
        return;
    }
    inord(root->left);
    cout << root->data<<endl;
    inord(root->right);
}
Node* searchi(Node* root,int key){
    if (root->data==key){
        return root;
    }
    if(root->data >key){
        return searchi(root->left,key);
 
 
    }
    return searchi(root->right,key);
}
int main(){
    Node *root=NULL;
    root=insertBST(root,5);
    insertBST(root,45);
    insertBST(root,3);
    insertBST(root,1);
    inord(root);
    if (searchi(root,3)==NULL){
        cout<<"yeahh"<<endl;
 
    }
    else{
        cout<<"nope"<<endl;
    }
    return 0;
}

